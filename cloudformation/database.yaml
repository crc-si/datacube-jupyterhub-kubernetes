AWSTemplateFormatVersion: '2010-09-09'
Description: 'ESPv2 Infrastructure, includes Postgres'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'VPC Parameters'
      Parameters:
      - ClassB
Parameters:
  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  InstanceType:
    Description: RDS instance type
    Type: String
  PubliclyAccessible:
    Description: Whether the DB is accessible from outside the VPC
    Type: String
    Default: true
Resources:
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref 'DBUser'
      AllocatedStorage: '20'
      StorageType: 'gp2'
      DBInstanceClass: !Ref 'InstanceType'
      Engine: postgres
      EngineVersion: 9.6.8
      MasterUsername: !Ref 'DBUser'
      MasterUserPassword: !Ref 'DBPassword'
      DBSubnetGroupName: !Ref 'MyDBSubnetGroup'
      PubliclyAccessible: !Ref 'PubliclyAccessible'
      VPCSecurityGroups: 
        - !Ref 'MyDBSecurityGroup'
      Tags:
        - 
          Key: Name
          Value: !Sub '${AWS::StackName}-rds'
  MyDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue 'gtg-infra-vpc-VPC'
      GroupDescription: 'A security group for the ESPv2 database'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        CidrIp: '0.0.0.0/0'
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'A subnet group for the ESPv2 database'
      SubnetIds:
        - !Select [0, !Split [",", !ImportValue 'gtg-infra-vpc-SubnetsPublic']]
        - !Select [1, !Split [",", !ImportValue 'gtg-infra-vpc-SubnetsPublic']]
Outputs:
  RDS:
    Description: 'RDSPostGIS'
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-RDSEndpoint'
